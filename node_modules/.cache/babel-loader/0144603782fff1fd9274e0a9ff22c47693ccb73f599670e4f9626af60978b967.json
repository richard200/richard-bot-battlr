{"ast":null,"code":"var _jsxFileName = \"/home/user/Development/code/phase2/richard-bot-battlr/src/components/BotsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotsPage() {\n  _s();\n  //start here with your code for step one\n  const [bots, setBots] = useState([]);\n\n  //a utility function to fetch data from the server\n  function fetchData() {\n    return fetch(`http://localhost:3000/bots`).then(resp => resp.json()).then(data => {\n      setBots(data);\n    });\n  }\n  //run fetch whenever the page loads\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  //add bot to army when the bot is clicked\n\n  function enlistBot(bot) {\n    setBots(bots.map(b => b.id === bot.id ? {\n      ...b,\n      army: true\n    } : b));\n  }\n  function removeBot(bot) {\n    setBots(bots.map(b => b.id === bot.id ? {\n      ...b,\n      army: false\n    } : b));\n  }\n  function deleteBot(bot) {\n    const deletedBot = bots.filter(b => b.id !== bot.id);\n    setBots(bots => deletedBot);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {\n      bots: bots.filter(bot => b.army)\n      // removeBot={removeBot}\n      // deleteBot={deleteBot}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      enlistBot: enlistBot,\n      deleteBot: deleteBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(BotsPage, \"HLWYdwhjlsHzdjlYtqtFyxxPKrE=\");\n_c = BotsPage;\nexport default BotsPage;\nvar _c;\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"names":["React","useState","useEffect","YourBotArmy","BotCollection","BotsPage","bots","setBots","fetchData","fetch","then","resp","json","data","enlistBot","bot","map","b","id","army","removeBot","deleteBot","deletedBot","filter"],"sources":["/home/user/Development/code/phase2/richard-bot-battlr/src/components/BotsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage() {\n  //start here with your code for step one\n  const [bots, setBots] = useState([]);\n\n  //a utility function to fetch data from the server\n  function fetchData() {\n    return fetch(`http://localhost:3000/bots`)\n      .then((resp) => resp.json())\n      .then((data) => {\n        setBots(data);\n      });\n  }\n  //run fetch whenever the page loads\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  //add bot to army when the bot is clicked\n\n  function enlistBot(bot) {\n    setBots(bots.map((b) => (b.id === bot.id ? { ...b, army: true } : b)));\n  }\n\n  function removeBot(bot) {\n    setBots(bots.map((b) => (b.id === bot.id ? { ...b, army: false } : b)));\n  }\n\n  function deleteBot(bot) {\n    const deletedBot = bots.filter((b) => b.id !== bot.id);\n    setBots((bots) => deletedBot);\n  }\n  return (\n    <div>\n      <YourBotArmy\n        bots={bots.filter((bot) => b.army)}\n        // removeBot={removeBot}\n        // deleteBot={deleteBot}\n      />\n      <BotCollection bots={bots} enlistBot={enlistBot} deleteBot={deleteBot} />\n    </div>\n  );\n}\n\nexport default BotsPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAAC;AAE5C,SAASC,QAAQ,GAAG;EAAA;EAClB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,SAASO,SAAS,GAAG;IACnB,OAAOC,KAAK,CAAE,4BAA2B,CAAC,CACvCC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,EAAE,CAAC,CAC3BF,IAAI,CAAEG,IAAI,IAAK;MACdN,OAAO,CAACM,IAAI,CAAC;IACf,CAAC,CAAC;EACN;EACA;EACAX,SAAS,CAAC,MAAM;IACdM,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,SAASM,SAAS,CAACC,GAAG,EAAE;IACtBR,OAAO,CAACD,IAAI,CAACU,GAAG,CAAEC,CAAC,IAAMA,CAAC,CAACC,EAAE,KAAKH,GAAG,CAACG,EAAE,GAAG;MAAE,GAAGD,CAAC;MAAEE,IAAI,EAAE;IAAK,CAAC,GAAGF,CAAE,CAAC,CAAC;EACxE;EAEA,SAASG,SAAS,CAACL,GAAG,EAAE;IACtBR,OAAO,CAACD,IAAI,CAACU,GAAG,CAAEC,CAAC,IAAMA,CAAC,CAACC,EAAE,KAAKH,GAAG,CAACG,EAAE,GAAG;MAAE,GAAGD,CAAC;MAAEE,IAAI,EAAE;IAAM,CAAC,GAAGF,CAAE,CAAC,CAAC;EACzE;EAEA,SAASI,SAAS,CAACN,GAAG,EAAE;IACtB,MAAMO,UAAU,GAAGhB,IAAI,CAACiB,MAAM,CAAEN,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKH,GAAG,CAACG,EAAE,CAAC;IACtDX,OAAO,CAAED,IAAI,IAAKgB,UAAU,CAAC;EAC/B;EACA,oBACE;IAAA,wBACE,QAAC,WAAW;MACV,IAAI,EAAEhB,IAAI,CAACiB,MAAM,CAAER,GAAG,IAAKE,CAAC,CAACE,IAAI;MACjC;MACA;IAAA;MAAA;MAAA;MAAA;IAAA,QACA,eACF,QAAC,aAAa;MAAC,IAAI,EAAEb,IAAK;MAAC,SAAS,EAAEQ,SAAU;MAAC,SAAS,EAAEO;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACrE;AAEV;AAAC,GAzCQhB,QAAQ;AAAA,KAARA,QAAQ;AA2CjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}